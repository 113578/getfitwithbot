from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command, CommandObject
from config.conifg import (
    NUTRITIONIX_ID,
    NUTRITIONIX_TOKEN
)
from src.utils import (
    load_user_info,
    save_user_info,
    get_nutritionix
)


logging_router = Router()


@logging_router.message(Command('log_water'))
async def cmd_log_water(message: Message, command: CommandObject) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É '/log_water' –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Ç—Ä–µ–±–ª—ë–Ω–Ω–æ–π –≤–æ–¥—ã.

    Parameters
    ------------
    message : Message
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–æ–º–∞–Ω–¥—É '/log_water'.
    command : CommandObject
        –û–±—ä–µ–∫—Ç –∫–æ–º–∞–Ω–¥—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç—ã (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥—ã –≤ –º–ª).

    Returns
    --------
    None
    """
    try:
        water_amount = int(command.args)
        assert water_amount > 0, '–ö–æ–ª-–≤–æ –≤–æ–¥—ã –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º'

        user_info = load_user_info(user_id=message.from_user.id)
        user_info.logged_water += water_amount
        save_user_info(user_info=user_info)

        if user_info.water_goal > user_info.logged_water:
            await message.reply(
                f'–î–æ–±–∞–≤–ª–µ–Ω–æ: {water_amount} –º–ª –≤–æ–¥—ã.\n'
                f'–î–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å {user_info.water_goal - user_info.logged_water} –º–ª.'
            )
        else:
            await message.reply(
                f'–î–æ–±–∞–≤–ª–µ–Ω–æ: {water_amount} –º–ª –≤–æ–¥—ã. –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –¥–Ω–µ–≤–Ω–æ–π —Ü–µ–ª–∏!'
            )

    except (ValueError, TypeError):
        await message.answer('–ö–æ–ª-–≤–æ –≤–æ–¥—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')
    except AssertionError as e:
        await message.answer(f'{e}! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')


@logging_router.message(Command('log_food'))
async def cmd_log_food(message: Message, command: CommandObject) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É '/log_food' –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Ç—Ä–µ–±–ª—ë–Ω–Ω–æ–π –µ–¥—ã –∏ –∫–∞–ª–æ—Ä–∏–π.

    Parameters
    ------------
    message : Message
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–æ–º–∞–Ω–¥—É '/log_food'.
    command : CommandObject
        –û–±—ä–µ–∫—Ç –∫–æ–º–∞–Ω–¥—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç—ã (–æ–ø–∏—Å–∞–Ω–∏–µ –µ–¥—ã –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ).

    Returns
    --------
    None
    """
    try:
        query = command.args
        assert query is not None, '–ó–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º'

        calories = await get_nutritionix(
            query=query,
            application_id=NUTRITIONIX_ID,
            api_key=NUTRITIONIX_TOKEN
        )

        user_info = load_user_info(user_id=message.from_user.id)
        user_info.logged_calories += calories
        save_user_info(user_info=user_info)

        if user_info.calorie_goal > user_info.logged_calories:
            await message.reply(
                f'–î–æ–±–∞–≤–ª–µ–Ω–æ: {calories} –∫–∫–∞–ª.\n'
                f'–î–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å {user_info.calorie_goal - user_info.logged_calories} –∫–∫–∞–ª.'
            )
        else:
            await message.reply(
                f'–î–æ–±–∞–≤–ª–µ–Ω–æ: {calories} –∫–∫–∞–ª. –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –¥–Ω–µ–≤–Ω–æ–π —Ü–µ–ª–∏!'
            )

    except AssertionError as e:
        await message.answer(f'{e}! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')


@logging_router.message(Command('check_progress'))
async def cmd_check_progress(message: Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É '/check_progress' –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≤–æ–¥–µ –∏ –∫–∞–ª–æ—Ä–∏—è–º.

    Parameters
    ------------
    message : Message
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–æ–º–∞–Ω–¥—É '/check_progress'.

    Returns
    --------
    None
    """
    user_info = load_user_info(user_id=message.from_user.id)

    await message.reply(
        'üìä –ü—Ä–æ–≥—Ä–µ—Å—Å:\n\n'
        '–í–æ–¥–∞:\n'
        f'- –í—ã–ø–∏—Ç–æ: {user_info.logged_water} –º–ª. –∏–∑ {user_info.water_goal} –º–ª.\n'
        f'- –û—Å—Ç–∞–ª–æ—Å—å: {user_info.water_goal - user_info.logged_water} –º–ª.\n'
        '–ö–∞–ª–æ—Ä–∏–∏:\n'
        f'- –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–æ: {user_info.logged_calories} –∫–∫–∞–ª. –∏–∑ {user_info.calorie_goal} –∫–∫–∞–ª.\n'
        f'- –°–æ–∂–∂–µ–Ω–æ: 228 –∫–∫–∞–ª.\n'
        f'- –û—Å—Ç–∞–ª–æ—Å—å: {user_info.calorie_goal - user_info.logged_calories} –∫–∫–∞–ª.\n'
    )
